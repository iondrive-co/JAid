plugins {
    id 'java'
    id 'application' // Allow running from gradle
}
// When running from gradle, this is the main class to launch
application {
    mainClassName = 'jaid.Launcher'
}
// Create a distributable runtime image using the jlink tool
task createRuntimeImage(type: Exec) {
    // This is provided by the application plugin
    dependsOn 'installDist'
    // Output here
    def imageDir = file("$buildDir/jAid")
    outputs.dir imageDir
    // Delete any existing directory first
    doFirst {
        imageDir.deleteDir()
    }
    // We want to build the launcher, and it depends on some things in util
    commandLine 'jlink',
            '--module-path', "$buildDir/classes/java/launcher:$buildDir/classes/java/util",
            '--add-modules', 'java.base,jaid.launcher,jaid.util',
            '--output', imageDir
}
// This is needed so that we can resolve the util configuration
configurations {
    utilResolve.extendsFrom utilImplementation
}
// This controls where gradle looks for source code
sourceSets {
    util {
        java {
            srcDirs = ['src/main/util']
        }
    }
    launcher {
        java {
            srcDirs = ['src/main/launcher']
        }
        // Update the launcher module classpath to include util and util resolve
        compileClasspath += sourceSets.util.output + configurations.utilResolve
        runtimeClasspath += sourceSets.util.output + configurations.utilResolve
    }
    utilTest {
        java {
            srcDir 'src/test/util'
        }
        compileClasspath += sourceSets.util.output
        runtimeClasspath += sourceSets.util.output
    }
}

plugins.withType(JavaPlugin).configureEach {
    java {
        modularity.inferModulePath = true
    }
    tasks.withType(JavaCompile) {
        doFirst {
            options.compilerArgs += [
                    '--module-path', classpath.asPath
            ]
            classpath = files()
        }
    }
}


repositories {
    mavenCentral()
}
dependencies {
    implementation  'org.apache.commons:commons-math3:3.6.1'
    implementation  'it.unimi.dsi:fastutil:8.5.12'
    implementation  'com.google.guava:guava:31.1-jre'
    implementation  'org.slf4j:slf4j-api:2.0.5'
    implementation  'org.slf4j:log4j-over-slf4j:2.0.5'

    testImplementation configurations.implementation
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.openjdk.jmh:jmh-core:1.37'
    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.37'

    utilImplementation configurations.implementation
    utilTestImplementation configurations.testImplementation
}